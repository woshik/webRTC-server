(this["webpackJsonpmultiparty-meeting"]=this["webpackJsonpmultiparty-meeting"]||[]).push([[10],{607:function(t,e,s){"use strict";s.r(e),s.d(e,"default",(function(){return r}));var i=s(44),h=s(162);const l=new(s(70).a)("Spotlight");class r extends h.EventEmitter{constructor(t,e){super(),this._signalingSocket=e,this._maxSpotlights=t,this._peerList=[],this._unmutablePeerList=[],this._selectedSpotlights=[],this._currentSpotlights=[],this._started=!1}start(){this._handleSignaling(),this._started=!0,this._spotlightsUpdated()}addPeers(t){var e,s=Object(i.a)(t);try{for(s.s();!(e=s.n()).done;){const t=e.value;this._newPeer(t.id)}}catch(h){s.e(h)}finally{s.f()}}peerInSpotlights(t){return!!this._started&&-1!==this._currentSpotlights.indexOf(t)}getNextAsSelected(t){let e=null;if(null==t&&this._unmutablePeerList.length>0&&(t=this._unmutablePeerList[0]),null!=t&&this._currentSpotlights.length<this._unmutablePeerList.length){let s=this._unmutablePeerList.indexOf(t);s++;for(let t=0;t<this._unmutablePeerList.length&&(s>=this._unmutablePeerList.length&&(s=0),e=this._unmutablePeerList[s],this._currentSpotlights.includes(e));t++)s++}return e}getPrevAsSelected(t){let e=null;if(null==t&&this._unmutablePeerList.length>0&&(t=this._unmutablePeerList[0]),null!=t&&this._currentSpotlights.length<this._unmutablePeerList.length){let s=this._unmutablePeerList.indexOf(t);s--;for(let t=0;t<this._unmutablePeerList.length&&(s<0&&(s=this._unmutablePeerList.length-1),e=this._unmutablePeerList[s],this._currentSpotlights.includes(e));t++)s--}return e}setPeerSpotlight(t){l.debug('setPeerSpotlight() [peerId:"%s"]',t);const e=this._selectedSpotlights.indexOf(t);this._selectedSpotlights=-1!==e?[]:[t],this._started&&this._spotlightsUpdated()}_handleSignaling(){this._signalingSocket.on("notification",t=>{if("newPeer"===t.method){const e=t.data.id;this._newPeer(e)}if("peerClosed"===t.method){const e=t.data.peerId;this._closePeer(e)}})}clearSpotlights(){this._started=!1,this._peerList=[],this._selectedSpotlights=[],this._currentSpotlights=[]}_newPeer(t){l.debug('room "newpeer" event [id: "%s"]',t),-1===this._peerList.indexOf(t)&&(l.debug('_handlePeer() | adding peer [peerId: "%s"]',t),this._peerList.push(t),this._unmutablePeerList.push(t),this._started&&this._spotlightsUpdated())}_closePeer(t){l.debug('room "peerClosed" event [peerId:%o]',t),this._peerList=this._peerList.filter(e=>e!==t),this._unmutablePeerList=this._unmutablePeerList.filter(e=>e!==t),this._selectedSpotlights=this._selectedSpotlights.filter(e=>e!==t),this._started&&this._spotlightsUpdated()}addSpeakerList(t){this._peerList=[...new Set([...t,...this._peerList])],this._started&&this._spotlightsUpdated()}handleActiveSpeaker(t){l.debug('handleActiveSpeaker() [peerId:"%s"]',t);const e=this._peerList.indexOf(t);e>-1&&(this._peerList.splice(e,1),this._peerList=[t].concat(this._peerList),this._spotlightsUpdated())}_spotlightsUpdated(){let t;t=this._selectedSpotlights.length>0?[...new Set([...this._selectedSpotlights,...this._peerList])]:this._peerList,this._arraysEqual(this._currentSpotlights,t.slice(0,this._maxSpotlights))?l.debug("_spotlightsUpdated() | spotlights not updated"):(l.debug("_spotlightsUpdated() | spotlights updated, emitting"),this._currentSpotlights=t.slice(0,this._maxSpotlights),this.emit("spotlights-updated",this._currentSpotlights))}_arraysEqual(t,e){if(t.length!==e.length)return!1;for(let s=t.length;s--;)if(t[s]!==e[s])return!1;return!0}get maxSpotlights(){return this._maxSpotlights}set maxSpotlights(t){const e=this._maxSpotlights;this._maxSpotlights=t,e!==this._maxSpotlights&&this._spotlightsUpdated()}}}}]);
//# sourceMappingURL=spotlights.a18a13e3.chunk.js.map