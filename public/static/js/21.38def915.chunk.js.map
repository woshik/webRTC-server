{"version":3,"sources":["components/ChooseRoom.js"],"names":["styles","theme","root","display","width","height","backgroundColor","backgroundImage","window","config","background","backgroundAttachment","backgroundPosition","backgroundSize","backgroundRepeat","dialogTitle","dialogPaper","padding","spacing","breakpoints","down","logo","paddingBottom","loginButton","position","right","top","largeIcon","fontSize","largeAvatar","green","color","DialogTitle","withStyles","props","children","classes","other","disableTypography","className","alt","src","variant","DialogContent","MuiDialogContent","DialogActions","margin","MuiDialogActions","useState","randomString","length","toLowerCase","roomId","setRoomId","intl","useIntl","open","paper","title","gutterBottom","id","defaultMessage","label","formatMessage","value","onChange","event","target","onBlur","fullWidth","component","Link","to","isElectron","buttonText"],"mappings":"0UAiBA,MAAMA,EAAUC,IAAD,CACbC,KAAM,CACJC,QAAS,OACTC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,0BACjBC,gBAAgB,OAAD,OAASC,OAAOC,OAASD,OAAOC,OAAOC,WAAa,KAApD,KACfC,qBAAsB,QACtBC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,aAEpBC,YAAa,GACbC,YAAa,CACXZ,MAAO,OACPa,QAAShB,EAAMiB,QAAQ,GACvB,CAACjB,EAAMkB,YAAYC,KAAK,OAAQ,CAC9BhB,MAAO,QAET,CAACH,EAAMkB,YAAYC,KAAK,OAAQ,CAC9BhB,MAAO,QAET,CAACH,EAAMkB,YAAYC,KAAK,OAAQ,CAC9BhB,MAAO,QAET,CAACH,EAAMkB,YAAYC,KAAK,OAAQ,CAC9BhB,MAAO,SAGXiB,KAAM,CACJlB,QAAS,QACTmB,cAAe,OAEjBC,YAAa,CACXC,SAAU,WACVC,MAAOxB,EAAMiB,QAAQ,GACrBQ,IAAKzB,EAAMiB,QAAQ,GACnBD,QAAS,GAEXU,UAAW,CACTC,SAAU,OAEZC,YAAa,CACXzB,MAAO,GACPC,OAAQ,IAEVyB,MAAO,CACLC,MAAO,wBAILC,EAAcC,YAAWjC,EAAXiC,CAAoBC,IAAW,MACzCC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,QAAYC,EADkB,YACRH,EADQ,wBAGhD,OACE,kBAAC,IAAD,eAAgBI,mBAAiB,EAACC,UAAWH,EAAQrB,aAAiBsB,GACnE7B,OAAOC,OAAOY,MAAQ,yBAAKmB,IAAI,OAAOD,UAAWH,EAAQf,KAAMoB,IAAKjC,OAAOC,OAAOY,OACnF,kBAAC,IAAD,CAAYqB,QAAQ,MAAMP,MAK1BQ,EAAgBV,YAAYhC,IAAD,CAC/BC,KAAM,CACJe,QAAShB,EAAMiB,QAAQ,MAFLe,CAIlBW,KAEEC,EAAgBZ,YAAYhC,IAAD,CAC/BC,KAAM,CACJ4C,OAAQ,EACR7B,QAAShB,EAAMiB,QAAQ,MAHLe,CAKlBc,KA4EWd,sBAAWjC,EAAXiC,CA1EI,EAAGG,cAAe,MAAD,EACNY,mBAASC,IAAa,CAAEC,OAAQ,IAAKC,eAD/B,mBAC3BC,EAD2B,KACnBC,EADmB,KAG5BC,EAAOC,cAEb,OACE,yBAAKhB,UAAWH,EAAQlC,MACtB,kBAAC,IAAD,CACEsD,MAAI,EACJpB,QAAS,CACPqB,MAAOrB,EAAQpB,cAGjB,kBAACgB,EAAD,KACGxB,OAAOC,OAAOiD,MAAQlD,OAAOC,OAAOiD,MAAQ,qBAC7C,8BAEF,kBAACf,EAAD,KACE,kBAAC,IAAD,CAAmBgB,cAAY,GAC7B,kBAAC,IAAD,CACEC,GAAG,kBACHC,eAAe,wDAInB,kBAAC,IAAD,CACED,GAAG,SACHE,MAAOR,EAAKS,cAAc,CACxBH,GAAI,iBACJC,eAAgB,cAElBG,MAAOZ,EACPV,QAAQ,WACRI,OAAO,SACPmB,SAAWC,IAAW,MACZF,EAAUE,EAAMC,OAAhBH,MAERX,EAAUW,EAAMb,gBAElBiB,OAAQ,KACS,KAAXhB,GAAeC,EAAUJ,IAAa,CAAEC,OAAQ,IAAKC,gBAE3DkB,WAAS,KAIb,kBAACxB,EAAD,KACE,kBAAC,IAAD,CAAQyB,UAAWC,IAAMC,GAAE,mBAAcpB,GAAUV,QAAQ,YAAYX,MAAM,aAC3E,kBAAC,IAAD,CAAkB6B,GAAG,yBAAyBC,eAAe,gBAI/DY,OACA,kBAAC,IAAD,CACEC,WAAYpB,EAAKS,cAAc,CAC7BH,GAAI,yBACJC,eAAgB,kBAGlB,kBAAC,IAAD,CACED,GAAG,qBACHC,eAAe","file":"static/js/21.38def915.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport isElectron from 'is-electron';\nimport PropTypes from 'prop-types';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport randomString from 'random-string';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CookieConsent from 'react-cookie-consent';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'var(--background-color)',\n    backgroundImage: `url(${window.config ? window.config.background : null})`,\n    backgroundAttachment: 'fixed',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n  },\n  dialogTitle: {},\n  dialogPaper: {\n    width: '30vw',\n    padding: theme.spacing(2),\n    [theme.breakpoints.down('lg')]: {\n      width: '40vw',\n    },\n    [theme.breakpoints.down('md')]: {\n      width: '50vw',\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '70vw',\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: '90vw',\n    },\n  },\n  logo: {\n    display: 'block',\n    paddingBottom: '1vh',\n  },\n  loginButton: {\n    position: 'absolute',\n    right: theme.spacing(2),\n    top: theme.spacing(2),\n    padding: 0,\n  },\n  largeIcon: {\n    fontSize: '2em',\n  },\n  largeAvatar: {\n    width: 50,\n    height: 50,\n  },\n  green: {\n    color: 'rgba(0, 153, 0, 1)',\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, ...other } = props;\n\n  return (\n    <MuiDialogTitle disableTypography className={classes.dialogTitle} {...other}>\n      {window.config.logo && <img alt=\"Logo\" className={classes.logo} src={window.config.logo} />}\n      <Typography variant=\"h5\">{children}</Typography>\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst ChooseRoom = ({ classes }) => {\n  const [roomId, setRoomId] = useState(randomString({ length: 8 }).toLowerCase());\n\n  const intl = useIntl();\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open\n        classes={{\n          paper: classes.dialogPaper,\n        }}\n      >\n        <DialogTitle>\n          {window.config.title ? window.config.title : 'Multiparty meeting'}\n          <hr />\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText gutterBottom>\n            <FormattedMessage\n              id=\"room.chooseRoom\"\n              defaultMessage=\"Choose the name of the room you would like to join\"\n            />\n          </DialogContentText>\n\n          <TextField\n            id=\"roomId\"\n            label={intl.formatMessage({\n              id: 'label.roomName',\n              defaultMessage: 'Room name',\n            })}\n            value={roomId}\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={(event) => {\n              const { value } = event.target;\n\n              setRoomId(value.toLowerCase());\n            }}\n            onBlur={() => {\n              if (roomId === '') setRoomId(randomString({ length: 8 }).toLowerCase());\n            }}\n            fullWidth\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button component={Link} to={`/meeting/${roomId}`} variant=\"contained\" color=\"secondary\">\n            <FormattedMessage id=\"label.chooseRoomButton\" defaultMessage=\"Continue\" />\n          </Button>\n        </DialogActions>\n\n        {!isElectron() && (\n          <CookieConsent\n            buttonText={intl.formatMessage({\n              id: 'room.consentUnderstand',\n              defaultMessage: 'I understand',\n            })}\n          >\n            <FormattedMessage\n              id=\"room.cookieConsent\"\n              defaultMessage=\"This website uses cookies to enhance the user experience\"\n            />\n          </CookieConsent>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nChooseRoom.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ChooseRoom);\n"],"sourceRoot":""}